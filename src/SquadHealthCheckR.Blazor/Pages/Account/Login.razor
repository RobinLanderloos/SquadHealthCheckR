@page "/account/login"
@using SquadHealthCheckR.Auth
@using SquadHealthCheckR.Components.Navigation
@layout EmptyLayout

<div class="hero min-h-screen bg-base-200">
    <div class="hero-content w-full max-w-lg text-center">
        <div class="card card-bordered w-full shadow-2xl bg-base-100">
            <div class="card-title flex justify-center items-center text-center mt-6">
                <h1 class="text-accent text-2xl">Login to SquadHealthCheckR</h1>
            </div>
            <EditForm Model="Model" OnSubmit="LoginSubmit" FormName="login-form" class="card-body">
                <div class="form-control">
                    <label class="label">
                        <span class="label-text">Email</span>
                    </label>
                    <InputText type="email" placeholder="Email" @bind-Value="Model.Email" class="input input-bordered" required/>
                </div>
                <div class="form-control">
                    <label class="label">
                        <span class="label-text">Password</span>
                    </label>
                    <InputText type="password" placeholder="Password" @bind-Value="Model.Password" class="input input-bordered" required/>
                    <label class="label">
                        <a href="#" class="label-text-alt link link-hover">Forgot password?</a>
                    </label>
                </div>
                <div class="flex flex-col w-full">
                    <div class="flex flex-col md:flex-row w-full justify-between md:flex-wrap">
                        <button type="submit" class="btn btn-primary md:basis-0 flex-grow w-full md:w-auto">Login</button>
                        <div class="md:divider md:divider-horizontal m-2"></div>
                        <AnchorLink Class="btn btn-accent md:basis-0 flex-grow w-full md:w-auto" Route="/account/register">
                            Register
                        </AnchorLink>
                    </div>
                    <div class="divider">OR</div>
                    <div class="flex w-full">
                        <a class="btn btn-outline flex-grow">Login using Google<i class="fa-brands fa-google"></i></a>
                    </div>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    [Inject] private IAccountManagement? AccountManagement { get; set; }
    [Inject] private NavigationManager? NavigationManager { get; set; }

    private LoginModel Model { get; set; } = new();
    private CookieAuthenticationStateProvider.FormResult FormResult { get; set; } = new();

    private async Task LoginSubmit()
    {
        if (AccountManagement == null)
        {
            // Alert the user that the page is broken, best to reload or restart or something...
            throw new InvalidOperationException("AccountManagement was not initialized");
        }

        FormResult = await AccountManagement.LoginAsync(Model.Email, Model.Password);

        if (FormResult.Succeeded)
        {
            NavigationManager?.NavigateTo("/");
        }
    }

    private class LoginModel
    {
        public string Email { get; set; } = string.Empty;
        public string Password { get; set; } = string.Empty;
    }

}